{
  "name": "inline-style-prefixer",
  "version": "0.3.3",
  "description": "Autoprefixer for Inline Style objects using userAgent and caniuse data",
  "main": "lib/Prefixer.js",
  "files": [
    "LICENSE",
    "README.md",
    "lib/"
  ],
  "scripts": {
    "clean": "rimraf lib dist",
    "transpile": "babel src --out-dir lib",
    "pretest": "npm run clean && npm run transpile && npm run generate",
    "generate": "node ./generator/generateData.js",
    "bundle": "browserify lib/Prefixer.js --o dist/prefixer.js && uglifyjs dist/prefixer.js -o dist/prefixer.min.js",
    "test": "mocha --recursive --compilers js:babel/register",
    "build": "npm run clean && mkdir dist && npm run transpile && npm run generate && npm run bundle",
    "release": "npm run build && npm publish"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/rofrischmann/inline-style-prefixer"
  },
  "keywords": [
    "react",
    "react styling",
    "prefixer",
    "inline styles",
    "autoprefixer",
    "vendor prefix",
    "userAgent"
  ],
  "author": {
    "name": "Robin Frischmann"
  },
  "license": "MIT",
  "dependencies": {
    "bowser": "^1.0.0",
    "caniuse-api": "^1.3.2"
  },
  "devDependencies": {
    "babel": "^5.6.14",
    "babelify": "^6.3.0",
    "browserify": "^11.1.0",
    "chai": "^3.2.0",
    "mocha": "^2.2.5",
    "object-assign": "^4.0.1",
    "rimraf": "^2.4.2",
    "uglifyjs": "^2.4.10"
  },
  "readme": "# Autoprefixer for Inline Style objects\n[![Build Status](https://travis-ci.org/rofrischmann/inline-style-prefixer.svg)](https://travis-ci.org/rofrischmann/inline-style-prefixer)\n[![Code Climate](https://codeclimate.com/github/rofrischmann/inline-style-prefixer/badges/gpa.svg)](https://codeclimate.com/github/rofrischmann/inline-style-prefixer)\n[![npm version](https://badge.fury.io/js/inline-style-prefixer.svg)](http://badge.fury.io/js/inline-style-prefixer)\n![Dependencies](https://david-dm.org/rofrischmann/inline-style-prefixer.svg)\n\n\tnpm install inline-style-prefixer\n**inline-style-prefixer** adds required **vendor prefixes** to your style object. It only adds prefixes if they're actually required since it evaluates the environments `userAgent`.<br> *~7kb gzipped.*\n> The information is based on [caniuse.com](http://caniuse.com/).\n\n## Browser Support\nSupports the major browsers with the following versions.\n* Chrome: 30+\n* Safari: 6+\n* Firefox: 25+\n* Opera: 13+\n* IE: 9+\n* iOS: 6+\n* Android: 4+\n* IE mobile: 9+\n* Opera mini: 5+\n* Android UC: 9+\n\n### Custom Build\nYou may have to create a custom build if you need older browser versions. Just modify the [config.js](config.js) file which includes all the browser version specifications.\n```sh\nnpm install\nnpm run build\n```\n## Usage\n```javascript\nimport Prefixer from 'inline-style-prefixer'\n\nlet styles = {\n\ttransition: '200ms all linear',\n\tuserSelect: 'none',\n\tnested : {\n\t\tboxSizing: 'border-box',\n\t\tappearance: 'none',\n\t\tcolor: 'blue',\n\t\tflex: 1\n\t}\n}\n\nlet prefixer = new Prefixer()\nprefixer.prefix(styles)\n\n// Assuming you are using e.g. Chrome version 27.0 this would\n// transform your styles object to the following the following\nlet output = {\n\ttransition: '200ms all linear',\n\tWebkitUserSelect: 'none',\n\tnested: {\n\t\tboxSizing: 'border-box',\n\t\tWebkitAppearance: 'none',\n\t\tcolor: 'blue',\n\t\tWebkitFlex: 1\n\t}\n}\n```\n\n## Custom userAgent\nSometimes your environment does not provide a proper userAgent string e.g. if you are **rendering on server-side**. Therefore optionally just pass a userAgent-string.\n\n```javascript\nimport Prefixer from 'inline-style-prefixer'\n\nconst customUserAgent = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.155 Safari/537.36'\nlet prefixer = new Prefixer(customUserAgent)\nprefixer.prefix(styles)\n```\n\n## Supported properties\nThe following list shows all supported properties that get evaluated.<br>\nThey are grouped in caniuse groups.\n\n* borderRadius\n* borderImage, borderImageOutset, borderImageRepeat, borderImageSlice, borderImageSource, borderImageWidth\n* flex, flexBasis, flexDirection, flexGrow, flexFlow, flexShrink, alignContent, alignItems, alignSelf, justifyContent, order\n* transition, transitionDelay, transitionDuration, transitionProperty, transitionTimingFunction\n* backfaceVisibility, perspective, perspectiveOrigin, transform, transformOrigin, transformStyle, transformOriginX, transformOriginY\n* animation, animationDelay, animationDirection, animationFillMode, animationDuration, anmationIterationCount, animationName, animationPlayState, animationTimingFunction\n* appearance\n* userSelect\n* backdropFilter\n* boxSizing\n* fontKerning\n* wrapFlow, wrapThrough, wrapMargin\n* scrollSnapType, scrollSnapPointsX, scrollSnapPointsY, scrollSnapDestination, scrollSnapCoordinate\n* textEmphasisPosition, textEmphasis, textEmphasisStyle, textEmphasisColor\n* textAlignLast\n* boxDecorationBreak\n* clipPath\n* maskImage, maskMode, maskRepeat, maskPosition, maskClip, maskOrigin, maskSize, maskComposite, mask, maskBorderSource, maskBorderMode, maskBorderSlice, maskBorderWidth, maskBorderOutset, maskBorderRepeat, maskBorder, maskType\n* touchAction\n* textSizeAdjust\n* textDecorationStyle, textDecorationSkip, textDecorationLine, textDecorationColor\n* shapeImageThreshold, shapeImageMargin, shapeImageOutside\n* tabSize\n* filter\n* resize\n* hyphens\n* flowInto, flowFrom, breakBefore, breakAfter, breakInside, regionFragment\n* gridTemplateColumns, gridTemplateRows, gridTemplateAreas, gridTemplate, gridAutoColumns, gridAutoRows, gridAutoFlow, grid, gridRowStart, gridColumnStart, gridRowEnd, gridRow, gridColumn, gridArea, rowGap, columnGap, gridGap\n* objectFit, objectPosition\n* textOverflow\n* backgroundClip, backgroundOrigin, backgroundSize\n* fontFeatureSettings\n* boxShadow\n* breakAfter, breakBefore, breakInside, columnCount, columnFill, columnGap, columnRule, columnRuleColor, columnRuleStyle, columnRuleWidth, columns, columnSpan, columnWidth\n\n## Special plugins\nSometimes it is not enough to just prefix a property, but you also need to prefix the value or even transform the value at all.<br>\nTherefore special plugins are used to tackle browser incompatibilities.<br>\nRight now there are 7 plugins. More might come if suggested.\n<br>\n\n\n* **calc**: Adds support for prefixed `calc` values on any property.\n\n* **cursor**: Adds support for prefixed new `cursor` values `zoom-in`, `zoom-out`, `grab`, `grabbing`.\n\n* **flex**: Adds support for prefixed `display` values using `display: flex` or `display: inline-flex`. \n\n* **flexboxIE**: Adds trasformators for the early 2012 flexbox specification used in IE 10 and IE Mobile 10.\n\n* **flexboxOld**: Adds trasformators for the old 2009 flexbox specification used in old Webkit-based browsers.\n\n* **gradient**: Adds support for prefixed `background` and `backgroundImage` values `linear-gradient`, `radial-gradient`, `repeating-linear-gradient` and `repeating-radial-gradient`. \n\n* **sizing**: Adds support for prefixed `maxHeight`, `maxWidth`, `width`, `height`, `columnWidth`,`minWidth`, `minHeight` intrinsic & extrinsic sizing values `min-content`, `max-content`, `fill-available`, `fit-content`, `contain-floats`\n\n\n# License\n**inline-style-prefixer** is licensed under the [MIT License](LICENSE).<br>\nCreated with â™¥ by [@rofrischmann](http://rofrischmann.de).\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/rofrischmann/inline-style-prefixer/issues"
  },
  "_id": "inline-style-prefixer@0.3.3",
  "_from": "inline-style-prefixer@^0.3.3"
}
